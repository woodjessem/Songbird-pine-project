gf.abund<- csvToUMF("Behavior_gf_pcount.csv", long = FALSE, type = "unmarkedFramePCount")
obsCovs(gf.abund)= scale (obsCovs(gf.abund))
sc <- siteCovs(gf.abund)
sc[,c(5:74)] <- scale(sc[, c(5:74)]) #from 26 to 74 +landscape+soils
siteCovs(gf.abund) <- sc
det.null.gf <- pcount(~1 ~1, gf.abund, mixture="P", K=50)
det.weather.gf <- pcount(~ Wind + Sky ~1, gf.abund, mixture="P", K=50)
det.global.gf <- pcount(~ Jdate + Wind + Sky + Noise +Time ~1, gf.abund, mixture="P", K=50)
det.sound.gf <- pcount(~ Noise + Wind ~1, gf.abund, mixture="P", K=50)
det.date.gf <- pcount(~ Jdate ~1, gf.abund, mixture="P", K=50)
det.detect.gf <- pcount(~ Jdate + Noise + Time ~1, gf.abund, mixture="P", K=50)
det.notdate.gf <-pcount(~ Wind + Sky + Noise ~1, gf.abund, mixture="P", K=50)
det.time.gf <-pcount(~ Time ~1, gf.abund, mixture="P",K=50)
det.timing.gf <-pcount(~ Time + Jdate ~1, gf.abund, mixture="P", K=50)
library("unmarked")
setwd("C:/Users/woodj/Documents/GRAD SCHOOL - CLEMSON/Project-Specific/R work/USDA-songbirds/USDA-songbirds")
gf.abund<- csvToUMF("Behavior_gf_pcount.csv", long = FALSE, type = "unmarkedFramePCount")
obsCovs(gf.abund)= scale (obsCovs(gf.abund))
sc <- siteCovs(gf.abund)
sc[,c(5:74)] <- scale(sc[, c(5:74)]) #from 26 to 74 +landscape+soils
siteCovs(gf.abund) <- sc
det.null.gf <- pcount(~1 ~1, gf.abund, mixture="P", K=50)
det.weather.gf <- pcount(~ Wind + Sky ~1, gf.abund, mixture="P", K=50)
det.global.gf <- pcount(~ Jdate + Wind + Sky + Noise +Time ~1, gf.abund, mixture="P", K=50)
det.sound.gf <- pcount(~ Noise + Wind ~1, gf.abund, mixture="P", K=50)
det.date.gf <- pcount(~ Jdate ~1, gf.abund, mixture="P", K=50)
det.detect.gf <- pcount(~ Jdate + Noise + Time ~1, gf.abund, mixture="P", K=50)
det.notdate.gf <-pcount(~ Wind + Sky + Noise ~1, gf.abund, mixture="P", K=50)
det.time.gf <-pcount(~ Time ~1, gf.abund, mixture="P",K=50)
det.timing.gf <-pcount(~ Time + Jdate ~1, gf.abund, mixture="P", K=50)
fmsDC <- fitList(det.null.gf, det.weather.gf, det.global.gf,
det.sound.gf, det.date.gf, det.detect.gf, det.notdate.gf,
det.time.gf, det.timing.gf)
msDC.gf <- modSel(fmsDC)
msDC.gf
det.date.gf
plogis(coef(det.date.gf,type="det"))
confint(det.date.gf, type="det",method="normal")
null.gf <- pcount(~ Jdate ~1, gf.abund, mixture="P", K=80)
global.gf <- pcount(~ Jdate
~ Treatment + Herbicide + BA + Nsnags +Ccover
+ Ldepth + TreeHt + TimeSinceB + TimeSinceT + Nthins
+ HW_dens_1050 + NP_over_20cm + FG_herb + FG_shrub
+ Rel_HW2P_canopy + PISoils  + NSoilTypes
+ Parea + ShapeIndex
, gf.abund, mixture="P", K=80) #+ FPSiteIndex
local.gf <- pcount(~ Jdate
~ Ccover + TreeHt + Ldepth
, gf.abund, mixture="P", K=80) #can only include BA OR CCover
lh.gf <- pcount(~ Jdate
~ FG_herb + FG_shrub + HW_dens_1050 + Ldepth + Rel_HW2P_canopy + BA + NHW_saplings
, gf.abund, mixture="P", K=80)
#note: these are similar to ground NESTERS now (kinda to shrubs too)
#covariates: forbes & grasses at 2 low heights, HW_dens_1050, leaf litter depth,
#  Greenberg: -Nburns, -TimeSinceB, leaf litter depth, - Nsnags
landmetrics.gf <- pcount (~ Jdate
~ Parea + ShapeIndex
, gf.abund, mixture="P",K=80)
landscape500.gf <- pcount(~ Jdate
~ Evergreen500m + HighDev500m + Schrubs500m + Ag500m
, gf.abund, mixture="P", K=80)
landscape1.gf <- pcount(~ Jdate
~ Evergreen1km + HighDev1km + Schrubs1km + Ag1km
, gf.abund, mixture="P", K=80)
landscape5.gf <- pcount(~ Jdate
~ Evergreen5km + HighDev5km + Schrubs5km
, gf.abund, mixture="P", K=80)
# - can't use Evergreen&Ag,
#+ can't use HighDev&OpenDev together
landscape30.gf <- pcount(~ Jdate
~ Evergreen30km + HighDev30km + Protected30km
, gf.abund, mixture="P", K=80)
#- can't use Protected&Ag together,
#- can't use Ag&HighDev together
#- can't use Evergreen&Ag together
#- can't use HighDev&OpenDev together
#- can't use Schrubs&OpenDev together
#+ can't use Grass&Ag together
#+ can't use Ag&OpenDev together
#+ can't use Water&Protected together
#+ can't use Schrubs&HighDev together
treatment.gf <- pcount(~ Jdate
~ Treatment + Nthins
, gf.abund, mixture ="P", K=80)
management.gf <- pcount(~ Jdate
~ Treatment + BA + TimeSinceB + TimeSinceT + Herbicide
, gf.abund, mixture="P", K=80)
disturbance.gf <- pcount(~ Jdate
~ TimeSinceB + TimeSinceT
, gf.abund, mixture="P", K=80)
siteprod.gf <- pcount(~ Jdate ~ PISoils + NSoilTypes
, gf.abund, mixture="P", K=80)    #FPSiteIndex
#greenberg.gf <- pcount(~ Jdate ~ BA + Nsnags + Nburns, gf.abund, mixture="P", K=80)
fmsGF <- fitList(null.gf, global.gf, local.gf, lh.gf, landmetrics.gf,
landscape500.gf, landscape1.gf, landscape5.gf, landscape30.gf,
treatment.gf, management.gf, disturbance.gf,
siteprod.gf)  #no greenberg
ms.gf <- modSel(fmsGF)
ms.gf
local.gf
plogis(coef(local.gf,type="state"))  #p(Int) 0.261   #p(Jdate) 0.517
plogis(coef(local.gf,type="det"))  #p(Int)    #p(Jdate)
plogis(coef(local.gf,type="state"))
confint(local.gf, type="state",method="normal")
confint(local.gf, type="det", method="normal")
signature(object = "ms.gf")
signature(object = "unmarkedFitList")
newdata2 <- data.frame(Ccover=seq(0,100, length = 120), TreeHt=0, Ldepth=0)
Epsi2 <- predict(local.gf, type="state", newdata=newdata2, appendData=TRUE)
Ep <- predict(local.gf, type="det", newdata=newdata2, appendData=TRUE)
plot(Predicted~ CCover, data=gf.est.ccover,ylim=c(0,30),type="l",lwd=3,xlab="Canopy Cover (%)",ylab="Est.GFs")
newdata2 <- data.frame(Ccover=seq(0,100, length = 120), TreeHt=0, Ldepth=0)
gf.est.ccover <- predict(local.gf, type="state", newdata=newdata2, appendData=TRUE)
plot(Predicted~ CCover, data=gf.est.ccover,ylim=c(0,30),type="l",lwd=3,xlab="Canopy Cover (%)",ylab="Est.GFs")
plot(Predicted~ Ccover, data=gf.est.ccover,ylim=c(0,30),type="l",lwd=3,xlab="Canopy Cover (%)",ylab="Est.GFs")
newdata2 <- data.frame(Ccover=seq(0,1, length = 120), TreeHt=0, Ldepth=0)
gf.est.ccover <- predict(local.gf, type="state", newdata=newdata2, appendData=TRUE)
plot(Predicted~ Ccover, data=gf.est.ccover,ylim=c(0,30),type="l",lwd=3,xlab="Canopy Cover (%)",ylab="Est.GFs")
str(gf.abund)
range(gf.abund$Ccover)
max(gf.abund$Ccover)
summary(gf.abund)
newdata2 <- data.frame(Ccover=seq(-4,4, length = 120), TreeHt=0, Ldepth=0)
gf.est.ccover <- predict(local.gf, type="state", newdata=newdata2, appendData=TRUE)
plot(Predicted~ Ccover, data=gf.est.ccover,ylim=c(0,30),type="l",lwd=3,xlab="Canopy Cover (%)",ylab="Est.GFs")
gf.abund<- csvToUMF("Behavior_gf_pcount.csv", long = FALSE, type = "unmarkedFramePCount")
obsCovs(gf.abund)= scale (obsCovs(gf.abund))
sc <- siteCovs(gf.abund)
sc[,c(5:74)] <- scale(sc[, c(5:74)]) #from 26 to 74 +landscape+soils
siteCovs(gf.abund) <- sc
newdata2 <- data.frame(Ccover=seq(-10,10, length = 120), TreeHt=0, Ldepth=0)
gf.est.ccover <- predict(local.gf, type="state", newdata=newdata2, appendData=TRUE)
plot(Predicted~ Ccover, data=gf.est.ccover,ylim=c(0,30),type="l",lwd=3,xlab="Canopy Cover (%)",ylab="Est.GFs")
newdata2 <- data.frame(Ccover=seq(-10,100, length = 120), TreeHt=0, Ldepth=0)
gf.est.ccover <- predict(local.gf, type="state", newdata=newdata2, appendData=TRUE)
plot(Predicted~ Ccover, data=gf.est.ccover,ylim=c(0,30),type="l",lwd=3,xlab="Canopy Cover (%)",ylab="Est.GFs")
newdata2 <- data.frame(Ccover=seq(-20,100, length = 120), TreeHt=0, Ldepth=0)
summary(local.gf)
plot(Predicted~ Ccover, data=gf.est.ccover,ylim=c(0,30),type="l",lwd=3,xlab="Canopy Cover (%)",ylab="Est.GFs")
lines(lower~ Ccover, data=gf.est.ccover, type="l", lwd=3, col="gray")
lines(upper~ Ccover, data=f=gf.est.ccover, type="l", lwd=3, col="gray")
newdata3 <-data.frame(Jdate=seq(-2,2,length=200))
Ep <- predict(local.gf, type="det", newdata=newdata3, appendData=TRUE)
Ep
plot(Predicted~ Jdate, data=Ep,ylim=c(0,30),type="l",lwd=3,xlab="Jdate",ylab="Est.GFs")
lines(lower~ Jdate, data=Ep, type="l", lwd=3, col="gray")
lines(upper~ Jdate, data=Ep, type="l", lwd=3, col="gray")
plot(Predicted~ Jdate, data=Ep,ylim=c(0,1),type="l",lwd=3,xlab="Jdate",ylab="Est.GFs")
lines(lower~ Jdate, data=Ep, type="l", lwd=3, col="gray")
lines(upper~ Jdate, data=Ep, type="l", lwd=3, col="gray")
methodSR <-read.csv("17_1by1_ACPC_SR.csv") #SR by 1 visit each - Site Type SR
plot(methodSR$SR ~ methodSR$Type)
evaluation<-lm(SR ~ Type, methodSR)
summary(evaluation)  #looks important/significant!
confint(evaluation, level=0.95)
anova(evaluation)
library("unmarked")
setwd("C:/Users/woodj/Documents/GRAD SCHOOL - CLEMSON/Project-Specific/R work/USDA-songbirds/USDA-songbirds")
test <-read.csv("able_abund.csv") #spp CSV file!
test <-read.csv("eabl_abund.csv") #spp CSV file!
summary(test)
str(test)
eabl.abund<- csvToUMF("eabl_abund.csv", long = FALSE, type = "unmarkedFramePCount")
obsCovs(eabl.abund)= scale (obsCovs(eabl.abund))
sc <- siteCovs(eabl.abund)
sc[,c(5:74)] <- scale(sc[, c(5:74)]) #from 26 to 74 +landscape+soils
siteCovs(eabl.abund) <- sc
testP.eabl <- pcount(~1 ~1, eabl.abund, mixture="P", K=4)
testNB.eabl <- pcount(~1 ~1, eabl.abund, mixture="NB", K=4)
fmsTEST <- fitList(testP.eabl, testNB.eabl)
msTEST.eabl <- modSel(fmsTEST)
msTEST.eabl
det.null.eabl <- pcount(~1 ~1, eabl.abund, mixture="P", K=15)
det.weather.eabl <- pcount(~ Wind + Sky ~1, eabl.abund, mixture="P", K=15)
det.global.eabl <- pcount(~ Jdate + Wind + Sky + Noise +Time ~1, eabl.abund, mixture="P", K=15)
det.sound.eabl <- pcount(~ Noise + Wind ~1, eabl.abund, mixture="P", K=15)
det.date.eabl <- pcount(~ Jdate ~1, eabl.abund, mixture="P", K=15)
det.detect.eabl <- pcount(~ Jdate + Noise + Time ~1, eabl.abund, mixture="P", K=15)
det.notdate.eabl <-pcount(~ Wind + Sky + Noise ~1, eabl.abund, mixture="P", K=15)
det.time.eabl <-pcount(~ Time ~1, eabl.abund, mixture="P",K=15)
det.timing.eabl <-pcount(~ Time + Jdate ~1, eabl.abund, mixture="P", K=15)
fmsDC <- fitList(det.null.eabl, det.weather.eabl, det.global.eabl,
det.sound.eabl, det.date.eabl, det.detect.eabl, det.notdate.eabl,
det.time.eabl, det.timing.eabl)
msDC.eabl <- modSel(fmsDC)
msDC.eabl
det.date.eabl   #positive relationship w time and
confint(det.date.eabl, type="state",method="normal")  #significant
confint(det.date.eabl, type="det",method="normal")  #significant
write.table(msDC.eabl@Full, file="C:/Users/woodj/Documents/GRAD SCHOOL - CLEMSON/Project-Specific/R work/USDA-songbirds/USDA-songbirds/eabl_top_models_msDC.xls",sep="\t")
testBA.eabl <- pcount(~Jdate ~ BA, eabl.abund, mixture="P", K=10)
testCcover.eabl <- pcount(~Jdate ~ Ccover, eabl.abund, mixture="P", K=10)
fmsctest <- fitList(testBA.eabl, testCcover.eabl)
msT.eabl <- modSel(fmsctest)
msT.eabl
null.eabl <- pcount(~ Jdate ~1, eabl.abund, mixture="P", K=40)
global.eabl <- pcount(~ Jdate
~ Treatment + Herbicide + BA + Nsnags +Ccover
+ Ldepth + TreeHt + Age + TimeSinceB + TimeSinceT + Nthins
+ HW_dens_1050 + FG_herb + FG_shrub + NHW_saplings + NP_over_20cm
+ Rel_HW2P_canopy + PISoils + FPSiteIndex + NSoilTypes
+ Parea + ShapeIndex
, eabl.abund, mixture="P", K=40)
local.eabl <- pcount(~ Jdate
~ Ccover + TreeHt + Ldepth
, eabl.abund, mixture="P", K=40) #can only include BA OR CCover
lh.eabl <- pcount(~ Jdate
~ BA + FG_herb + HW_dens_1050 + NHW_saplings
, eabl.abund, mixture="P", K=40)
landmetrics.eabl <- pcount (~ Jdate
~ Parea + ShapeIndex
, eabl.abund, mixture="P",K=40)
landscape500.eabl <- pcount(~ Jdate
~ Grass500m + OpenDev500m + Schrubs500m + Ag500m
, eabl.abund, mixture="P", K=40)
landscape1.eabl <- pcount(~ Jdate
~ Grass1km + OpenDev1km + Schrubs1km + Ag1km
, eabl.abund, mixture="P", K=40)
landscape5.eabl <- pcount(~ Jdate
~ Grass5km + OpenDev5km + Schrubs5km + Ag5km
, eabl.abund, mixture="P", K=40)
landscape30.eabl <- pcount(~ Jdate
~ Grass30km + OpenDev30km
, eabl.abund, mixture="P", K=40)
treatment.eabl <- pcount(~ Jdate
~ Treatment + Nthins
, eabl.abund, mixture ="P", K=40)
management.eabl <- pcount(~ Jdate
~ Treatment + BA + TimeSinceB + TimeSinceT + Herbicide
, eabl.abund, mixture="P", K=40)
disturbance.eabl <- pcount(~ Jdate
~ TimeSinceB + TimeSinceT
, eabl.abund, mixture="P", K=40)
siteprod.eabl <- pcount(~ Jdate ~ PISoils + NSoilTypes
, eabl.abund, mixture="P", K=40) # + FPSiteIndex
global.eabl <- pcount(~ Jdate
~ Treatment + Herbicide + BA + Nsnags +Ccover
+ Ldepth + TreeHt + Age + TimeSinceB + TimeSinceT + Nthins
+ HW_dens_1050 + FG_herb + NHW_saplings
+ PISoils + NSoilTypes
+ Parea + ShapeIndex
, eabl.abund, mixture="P", K=40)
lh.eabl <- pcount(~ Jdate
~ BA + FG_herb + HW_dens_1050 + NHW_saplings + Nsnags
, eabl.abund, mixture="P", K=40)
fmsEABL <- fitList(null.eabl, global.eabl, local.eabl, lh.eabl, landmetrics.eabl,
landscape500.eabl, landscape1.eabl, landscape5.eabl, landscape30.eabl,
treatment.eabl, management.eabl, disturbance.eabl,
siteprod.eabl)
ms.eabl <- modSel(fmsEABL) #note this does not include upstate
ms.eabl
landmetrics.eabl
confint(landmetrics.eabl, type="state",method="normal")
