M[3,3]=s2
I=matrix(0,3,3)
I[1,1]=1
I[2,2]=1
I[3,3]=1
I<-diag(3)
D=as.numeric()
for (yr in 2:tmax) {
D[1]=((K-sum(n[1,]))/K)
n[yr,]=(n[yr-1,])+(D)*(M-I)%*%n[yr-1,]
}
N=apply(n,1,sum)
plot(1:tmax,N,"l",ylim=c(0,max(N)),xlab="year")
#plot total abundance over time (go back to lab portion and find that plot of N/n)
# lines 10-75 from above except with this equation instead of what we did there
#xxxxx <-Nt+((K-Tnt)/(K))*(M-I)*Nt ...
#I<-diag(3) #this is used to extract the diagonal values from a 3x3 matrix
#check any other notes, otherwise just read up on online/in Help
K=200
tmax=40
n=matrix(NA,tmax,3)
n0<-c(32,55,100)
n[1,]=n0
f1=1.1
f2=2.3
s0=0.32
s1=0.42
s2=0.469
M=matrix(0,3,3)
M[1,1]=f1*s0
M[1,2]=f2*s1
M[1,3]=f2*s2
M[2,1]=s0
M[3,2]=s1
M[3,3]=s2
I=matrix(0,3,3)
I[1,1]=1
I[2,2]=1
I[3,3]=1
I<-diag(3)
D=as.numeric()
for (yr in 2:tmax) {
D[1]=((K-sum(n[1,]))/K)
n[yr,]=(n[yr-1,])+(D)*(M-I)%*%n[yr-1,]
}
N=apply(n,1,sum)
plot(1:tmax,N,"l",ylim=c(0,max(N)),xlab="year")
#plot total abundance over time (go back to lab portion and find that plot of N/n)
# lines 10-75 from above except with this equation instead of what we did there
#xxxxx <-Nt+((K-Tnt)/(K))*(M-I)*Nt ...
#I<-diag(3) #this is used to extract the diagonal values from a 3x3 matrix
#check any other notes, otherwise just read up on online/in Help
K=200
tmax=50
n=matrix(NA,tmax,3)
n0<-c(32,55,100)
n[1,]=n0
f1=1.1
f2=2.3
s0=0.32
s1=0.42
s2=0.469
M=matrix(0,3,3)
M[1,1]=f1*s0
M[1,2]=f2*s1
M[1,3]=f2*s2
M[2,1]=s0
M[3,2]=s1
M[3,3]=s2
I=matrix(0,3,3)
I[1,1]=1
I[2,2]=1
I[3,3]=1
I<-diag(3)
#Nt+((K-Tnt)/(K))*(M-I)*Nt
D=as.numeric()
for (yr in 2:tmax) {
D[1]=((K-sum(n[1,]))/K)
n[yr,]=(n[yr-1,])+(D)*(M-I)%*%n[yr-1,]
}
N=apply(n,1,sum)
plot(1:tmax,N,"l",ylim=c(0,max(N)),xlab="year")
#plot total abundance over time (go back to lab portion and find that plot of N/n)
# lines 10-75 from above except with this equation instead of what we did there
#xxxxx <-Nt+((K-Tnt)/(K))*(M-I)*Nt ...
#I<-diag(3) #this is used to extract the diagonal values from a 3x3 matrix
#check any other notes, otherwise just read up on online/in Help
K=200
tmax=50
n=matrix(NA,tmax,3)
n0<-c(32,55,100)
n[1,]=n0
f1=1.1
f2=2.3
s0=0.32
s1=0.42
s2=0.469
M=matrix(0,3,3)
M[1,1]=f1*s0
M[1,2]=f2*s1
M[1,3]=f2*s2
M[2,1]=s0
M[3,2]=s1
M[3,3]=s2
I=matrix(0,3,3)
I[1,1]=1
I[2,2]=1
I[3,3]=1
I<-diag(3)
#Nt+((K-Tnt)/(K))*(M-I)*Nt
D=as.numeric()
for (yr in 2:tmax) {
D[1]=((K-sum(n[1,]))/K)
n[yr,]=(n[yr-1,])+(D)*(M-I)%*%n[yr-1,]
}
N=apply(n,1,sum)
plot(1:tmax,N,"l",ylim=c(0,max(N)),xlab="year")
#plot total abundance over time (go back to lab portion and find that plot of N/n)
# lines 10-75 from above except with this equation instead of what we did there
#xxxxx <-Nt+((K-Tnt)/(K))*(M-I)*Nt ...
#I<-diag(3) #this is used to extract the diagonal values from a 3x3 matrix
#check any other notes, otherwise just read up on online/in Help
#just matrix population model, not projecting forward
library(popdemo)
library(popbio)
# based on info above
f1=1.1 #juvenile fecundity (lower, naturally)
f2=2.3 #adult fecundity (higher)
s0=0.32 #fledgling survival phi (like s0 or G1)
s1=0.42 #juvenile survival phi (like s1 or G2)
s2=0.469 #adult survival phi flood year (like s2 or G3)
n0=c(32,55,100) #initial population vector
M=matrix(0,3,3)
M[1,1]=f1*s0
M[1,2]=f2*s1
M[1,3]=f2*s2
M[2,1]=s0
M[3,2]=s1
M[3,3]=s2
M
lambda(M)
sensitivity(M)
#just matrix population model, not projecting forward
library(popdemo)
library(popbio)
# based on info above
f1=1.1 #juvenile fecundity (lower, naturally)
f2=2.3 #adult fecundity (higher)
s0=0.32 #fledgling survival phi (like s0 or G1)
s1=0.42 #juvenile survival phi (like s1 or G2)
s2=0.469 #adult survival phi flood year (like s2 or G3)
n0=c(32,55,100) #initial population vector
M=matrix(0,3,3)
M[1,1]=f1*s0
M[1,2]=f2*s1
M[1,3]=f2*s2
M[2,1]=s0
M[3,2]=s1
M[3,3]=s2
M
lambda(M)
sensitivity(M)
#(Based on the sensitivities, I would have targeted juvenile survival, not adult...)
# s2 needs to be perturbed
#transfer function of asymptotic growth
#evaluate effect of [3,3] - s2 - over range of values for p
tf3 <- tfa(M, d=c(0,0,1), e=c(0,0,1), prange=seq(0,0.2,0.01))
plot(tf3)
#transfer function of population inertia
n0 <- c(32,55,100) #initial population vector
tf4 <- inertia.tfa(M, vector=n0, d=c(0,0,1),
e=c(0,0,1),prange=seq(0,0.2,0.01))
plot(tf4)
n0.amp <- c(32,55,100)
reactivity(M, vector=n0.amp)
maxamp(M, vector=n0.amp)
inertia(M, vector=n0.amp)
plot(project(M,vector=n0.amp,time=50,standard.vec=TRUE,standard.A=TRUE))
n0.destruction <- c(00,55,100) #instead
reactivity(M, vector=n0.destruction)
maxamp(M, vector=n0.destruction)
inertia(M, vector=n0.destruction)
plot(project(M,vector=n0.destruction,time=50,standard.vec=TRUE,standard.A=TRUE))
tf5 <- inertia.tfa(M, vector=n0.destruction, d=c(0,0,1),
e=c(0,0,1),prange=seq(0,0.2,0.01))
plot(tf5)
K=200
tmax=50 #using same time frame as in questions above, 50 yrs.
n=matrix(NA,tmax,3)
n0<-c(32,55,100)
n[1,]=n0 #make first row the initial population vector
#same f1,f2,s0,s1,s2 values as above, not retyped
#same M matrix as above, but defined again here, just in case chunks separated
M=matrix(0,3,3)
M[1,1]=f1*s0
M[1,2]=f2*s1
M[1,3]=f2*s2
M[2,1]=s0
M[3,2]=s1
M[3,3]=s2
I=matrix(0,3,3) #three by three matrix, [100,010,001]
I[1,1]=1
I[2,2]=1
I[3,3]=1
I<-diag(3)
#Nt+((K-Tnt)/(K))*(M-I)*Nt
#T is the sum of all n abundances, this incorporated below
D=as.numeric()
for (yr in 2:tmax) {
D[1]=((K-sum(n[1,]))/K)
n[yr,]=(n[yr-1,])+(D)*(M-I)%*%n[yr-1,]
}
N=apply(n,1,sum) #add together the abundances in age classes
plot(1:tmax,N,"l",ylim=c(0,max(N)),xlab="year")
Tnt<-sum(n[1,])
for (yr in 2:tmax) {
D[1]=((K-Tnt)/K)
n[yr,]=(n[yr-1,])+(D)*(M-I)%*%n[yr-1,]
}
N=apply(n,1,sum) #add together the abundances in age classes
plot(1:tmax,N,"l",ylim=c(0,max(N)),xlab="year")
K=200
tmax=50 #using same time frame as in questions above, 50 yrs.
n=matrix(NA,tmax,3)
n0<-c(32,55,100)
n[1,]=n0 #make first row the initial population vector
#same f1,f2,s0,s1,s2 values as above, not retyped
#same M matrix as above, but defined again here, just in case chunks separated
M=matrix(0,3,3)
M[1,1]=f1*s0
M[1,2]=f2*s1
M[1,3]=f2*s2
M[2,1]=s0
M[3,2]=s1
M[3,3]=s2
I=matrix(0,3,3) #three by three matrix, [100,010,001]
I[1,1]=1
I[2,2]=1
I[3,3]=1
I<-diag(3)
#Equation: Nt+((K-Tnt)/(K))*(M-I)*Nt
Q=as.numeric() # Q=quotient term (K-Tnt)/K
Tnt<-sum(n[1,]) #T is the sum of all n abundances
for (yr in 2:tmax) {
Q[1]=((K-Tnt)/K)
n[yr,]=(n[yr-1,])+(Q)*(M-I)%*%n[yr-1,]
}
N=apply(n,1,sum) #add together the abundances in age classes
plot(1:tmax,N,"l",ylim=c(0,max(N)),xlab="year")
K=200
tmax=50 #using same time frame as in questions above, 50 yrs.
n=matrix(NA,tmax,3)
n0<-c(32,55,100)
n[1,]=n0 #make first row the initial population vector
#same f1,f2,s0,s1,s2 values as above, not retyped
#same M matrix as above, but defined again here, just in case chunks separated
M=matrix(0,3,3)
M[1,1]=f1*s0
M[1,2]=f2*s1
M[1,3]=f2*s2
M[2,1]=s0
M[3,2]=s1
M[3,3]=s2
I=matrix(0,3,3) #three by three matrix, [100,010,001]
I[1,1]=1
I[2,2]=1
I[3,3]=1
I<-diag(3)
#Equation: Nt+((K-Tnt)/(K))*(M-I)*Nt
Q=as.numeric() # Q=quotient term (K-Tnt)/K
Tnt<-sum(n[1,]) #T is the sum of all n abundances
for (yr in 2:tmax) {
Q[1]=((K-Tnt)/K)
n[yr,]=(n[yr-1,])+(Q)*(M-I)%*%n[yr-1,]
}
N=apply(n,1,sum) #add together the abundances in age classes
plot(1:tmax,N,"l",ylim=c(0,max(N)),xlab="Years")
test <-read.csv("piwa_abund.csv")
summary(test)
str(test)
library("unmarked")
setwd("~/GRAD SCHOOL - CLEMSON/Project-Specific/R work/USDA-songbirds/USDA-songbirds")
test <-read.csv("piwa_abund.csv")
summary(test)
str(test)
var(test$[2:5])
var(test[2:5])
mean(test[2:5])
mean(test[2:4])
mean(test$y.1)
mean(test$y.2)
mean(test$y.3)
piwa.abund<- csvToUMF("piwa_abund.csv", long = FALSE, type = "unmarkedFramePCount")
obsCovs(piwa.abund)= scale(obsCovs(piwa.abund))
siteCovs(piwa.abund)= scale(siteCovs(piwa.abund))
det.null.piwa <- pcount(~1 ~1, piwa.abund, mixture="P")
det.weather.piwa <- pcount(~ Wind + Sky ~1, piwa.abund, mixture="P")
det.global.piwa <- pcount(~ Jdate + Wind + Sky + Noise ~1, piwa.abund, mixture="P")
det.sound.piwa <- pcount(~ Noise + Wind ~1, piwa.abund, mixture="P")
det.date.piwa <- pcount(~ Jdate ~1, piwa.abund, mixture="P")
det.detect.piwa <- pcount(~ Jdate + Noise ~1, piwa.abund, mixture="P")
det.notdate.piwa <-pcount(~ Wind + Sky + Noise ~1, piwa.abund, mixture="P")
fms <- fitList(det.null.piwa, det.weather.piwa, det.global.piwa,
det.sound.piwa, det.date.piwa, det.detect.piwa, det.notdate.piwa)
ms1.piwa <- modSel(fms)
ms1.piwa
det.null.piwa <- pcount(~1 ~1, piwa.abund, mixture="NB")
det.weather.piwa <- pcount(~ Wind + Sky ~1, piwa.abund, mixture="NB")
det.global.piwa <- pcount(~ Jdate + Wind + Sky + Noise ~1, piwa.abund, mixture="NB")
det.sound.piwa <- pcount(~ Noise + Wind ~1, piwa.abund, mixture="NB")
det.date.piwa <- pcount(~ Jdate ~1, piwa.abund, mixture="NB")
det.detect.piwa <- pcount(~ Jdate + Noise ~1, piwa.abund, mixture="NB")
det.notdate.piwa <-pcount(~ Wind + Sky + Noise ~1, piwa.abund, mixture="NB")
fms <- fitList(det.null.piwa, det.weather.piwa, det.global.piwa,
det.sound.piwa, det.date.piwa, det.detect.piwa, det.notdate.piwa)
ms1.piwa <- modSel(fms)
ms1.piwa
null.piwa <- pcount(~1 ~1, piwa.abund, mixture="NB")
global.piwa <- pcount(~ 1 ~ Treatment + BA + Nsnags
+ Ccover + Ldepth + TreeHt + Age + TimeSinceB + Herbicide
, piwa.abund, mixture="NB")
local.piwa <- pcount(~ 1 ~ BA + Ccover + TreeHt + Ldepth, piwa.abund, mixture="NB")
lh.piwa <- pcount(~ 1 ~ Ccover + TreeHt + BA, piwa.abund, mixture="NB")
#landscape.piwa <- pcount(~ 1 ~ cov 5 + 6, piwa.abund)
treatment.piwa <- pcount(~ 1 ~ Treatment + BA + TimeSinceB + Herbicide, piwa.abund, mixture="NB")
fms2 <- fitList(null.piwa, global.piwa, local.piwa, lh.piwa, treatment.piwa)
ms2.piwa <- modSel(fms2)
ms2.piwa
det.null.piwa <- pcount(~1 ~1, piwa.abund, mixture="P")
det.weather.piwa <- pcount(~ Wind + Sky ~1, piwa.abund, mixture="P")
det.global.piwa <- pcount(~ Jdate + Wind + Sky + Noise ~1, piwa.abund, mixture="P")
det.sound.piwa <- pcount(~ Noise + Wind ~1, piwa.abund, mixture="P")
det.date.piwa <- pcount(~ Jdate ~1, piwa.abund, mixture="P")
det.detect.piwa <- pcount(~ Jdate + Noise ~1, piwa.abund, mixture="P")
det.notdate.piwa <-pcount(~ Wind + Sky + Noise ~1, piwa.abund, mixture="P")
fms <- fitList(det.null.piwa, det.weather.piwa, det.global.piwa,
det.sound.piwa, det.date.piwa, det.detect.piwa, det.notdate.piwa)
ms1.piwa <- modSel(fms)
ms1.piwa
null.piwa <- pcount(~1 ~1, piwa.abund, mixture="P")
global.piwa <- pcount(~ 1 ~ Treatment + BA + Nsnags
+ Ccover + Ldepth + TreeHt + Age + TimeSinceB + Herbicide
, piwa.abund, mixture="P")
local.piwa <- pcount(~ 1 ~ BA + Ccover + TreeHt + Ldepth, piwa.abund, mixture="P")
lh.piwa <- pcount(~ 1 ~ Ccover + TreeHt + BA, piwa.abund, mixture="P")
#landscape.piwa <- pcount(~ 1 ~ cov 5 + 6, piwa.abund, mixture="P")
treatment.piwa <- pcount(~ 1 ~ Treatment + BA + TimeSinceB + Herbicide, piwa.abund, mixture="P")
fms2 <- fitList(null.piwa, global.piwa, local.piwa, lh.piwa, treatment.piwa)
ms2.piwa <- modSel(fms2)
ms2.piwa
piwa.abund<- csvToUMF("piwa_abund.csv", long = FALSE, type = "unmarkedFramePCount")
summary(piwa.abund)
str(piwa.abund)
piwa.abund<- csvToUMF("piwa_abund.csv", long = FALSE, type = "unmarkedFramePCount")
str(piwa.abund)
obsCovs(piwa.abund)= scale(obsCovs(piwa.abund))
siteCovs(piwa.abund)= scale(siteCovs(piwa.abund)) #didn't like it -
as.numeric(piwa.abund$Treatment(f,levels=c("0B","1B","2B","3B")))
piwa.abund$Treatment2<-as.numeric(piwa.abund$Treatment(f,levels=c("0B","1B","2B","3B")))
piwa.abund$Treatment2<-as.numeric(piwa.abund$Treatment)
piwa.abund$Treatment2<-as.character(piwa.abund$Treatment)
piwa.abund$Treatment2<-revalue(piwa.abund$Treatment, c("0B"="0","1B"="1","2B"="2","3B"="3"))
library(plyr)
piwa.abund$Treatment2<-revalue(piwa.abund$Treatment, c("0B"="0","1B"="1","2B"="2","3B"="3"))
piwa.abund$Treatment<-revalue(piwa.abund$Treatment, c("0B"="0","1B"="1","2B"="2","3B"="3"))
piwa.abund<- csvToUMF("piwa_abund.csv", long = FALSE, type = "unmarkedFramePCount")
str(piwa.abund)
obsCovs(piwa.abund)= scale(obsCovs(piwa.abund))
siteCovs(piwa.abund)= scale(siteCovs(piwa.abund))
det.null.piwa <- pcount(~1 ~1, piwa.abund, mixture="P")
det.weather.piwa <- pcount(~ Wind + Sky ~1, piwa.abund, mixture="P")
det.global.piwa <- pcount(~ Jdate + Wind + Sky + Noise ~1, piwa.abund, mixture="P")
det.sound.piwa <- pcount(~ Noise + Wind ~1, piwa.abund, mixture="P")
det.date.piwa <- pcount(~ Jdate ~1, piwa.abund, mixture="P")
det.detect.piwa <- pcount(~ Jdate + Noise ~1, piwa.abund, mixture="P")
det.notdate.piwa <-pcount(~ Wind + Sky + Noise ~1, piwa.abund, mixture="P")
fms <- fitList(det.null.piwa, det.weather.piwa, det.global.piwa,
det.sound.piwa, det.date.piwa, det.detect.piwa, det.notdate.piwa)
ms1.piwa <- modSel(fms)
ms1.piwa
null.piwa <- pcount(~1 ~1, piwa.abund, mixture="P")
global.piwa <- pcount(~ 1 ~ Treatment + BA + Nsnags
+ Ccover + Ldepth + TreeHt + Age + TimeSinceB + Herbicide
, piwa.abund, mixture="P")
local.piwa <- pcount(~ 1 ~ BA + Ccover + TreeHt + Ldepth, piwa.abund, mixture="P")
lh.piwa <- pcount(~ 1 ~ Ccover + TreeHt + BA, piwa.abund, mixture="P")
#landscape.piwa <- pcount(~ 1 ~ cov 5 + 6, piwa.abund, mixture="P")
treatment.piwa <- pcount(~ 1 ~ Treatment + BA + TimeSinceB + Herbicide, piwa.abund, mixture="P")
fms2 <- fitList(null.piwa, global.piwa, local.piwa, lh.piwa, treatment.piwa)
ms2.piwa <- modSel(fms2)
ms2.piwa
null3.piwa <- pcount(~ Jdate ~1, piwa.abund)
global3.piwa <- pcount(~ Jdate ~ Treatment + BA + Nsnags
+ Ccover + Ldepth + TreeHt + Age + TimeSinceB + Herbicide
, piwa.abund)
local3.piwa <- pcount(~ Jdate ~ BA + Ccover + TreeHt + Ldepth, piwa.abund)
lh3.piwa <- pcount(~ Jdate ~ Ccover + TreeHt + BA, piwa.abund)
#landscape.piwa <- pcount(~ Jdate ~ cov 5 + 6, piwa.abund)
treatment3.piwa <- pcount(~ Jdate ~ Treatment + BA + TimeSinceB + Herbicide, piwa.abund)
fms4 <- fitList(null3.piwa, global3.piwa, local3.piwa, lh3.piwa, treatment3.piwa)
ms4.piwa <- modSel(fms4)
ms4.piwa
fms4 <- fitList(null3.piwa, global3.piwa, local3.piwa, lh3.piwa, treatment3.piwa)
ms4.piwa <- modSel(fms4)
fms4 <- fitList(null3.piwa, global3.piwa, local3.piwa, lh3.piwa, treatment3.piwa)
ms4.piwa <- modSel(fms4)
cawr.abund<- csvToUMF("cawr_abund.csv", long = FALSE, type = "unmarkedFramePCount")
obsCovs(cawr.abund)= scale (obsCovs(cawr.abund))
det.null.cawr <- pcount(~1 ~1, cawr.abund)
det.weather.cawr <- pcount(~ Wind + Sky ~1, cawr.abund)
det.global.cawr <- pcount(~ Jdate + Wind + Sky + Noise ~1, cawr.abund)
det.sound.cawr <- pcount(~ Noise + Wind ~1, cawr.abund)
det.date.cawr <- pcount(~ Jdate ~1, cawr.abund)
det.detect.cawr <- pcount(~ Jdate + Noise ~1, cawr.abund)
det.notdate.cawr <-pcount(~ Wind + Sky + Noise ~1, cawr.abund)
fms <- fitList(det.null.cawr, det.weather.cawr, det.global.cawr,
det.sound.cawr, det.date.cawr, det.detect.cawr, det.notdate.cawr)
ms1.cawr <- modSel(fms)
ms1.cawr
det.null.cawr <- pcount(~1 ~1, cawr.abund, mixture="P")
det.weather.cawr <- pcount(~ Wind + Sky ~1, cawr.abund, mixture="P")
det.global.cawr <- pcount(~ Jdate + Wind + Sky + Noise ~1, cawr.abund, mixture="P")
det.sound.cawr <- pcount(~ Noise + Wind ~1, cawr.abund, mixture="P")
det.date.cawr <- pcount(~ Jdate ~1, cawr.abund, mixture="P")
det.detect.cawr <- pcount(~ Jdate + Noise ~1, cawr.abund, mixture="P")
det.notdate.cawr <-pcount(~ Wind + Sky + Noise ~1, cawr.abund, mixture="P")
fms <- fitList(det.null.cawr, det.weather.cawr, det.global.cawr,
det.sound.cawr, det.date.cawr, det.detect.cawr, det.notdate.cawr)
ms1.cawr <- modSel(fms)
ms1.cawr
det.null.cawr <- pcount(~1 ~1, cawr.abund, mixture="NB")
det.weather.cawr <- pcount(~ Wind + Sky ~1, cawr.abund, mixture="NB")
det.global.cawr <- pcount(~ Jdate + Wind + Sky + Noise ~1, cawr.abund, mixture="NB")
det.sound.cawr <- pcount(~ Noise + Wind ~1, cawr.abund, mixture="NB")
det.date.cawr <- pcount(~ Jdate ~1, cawr.abund, mixture="NB")
det.detect.cawr <- pcount(~ Jdate + Noise ~1, cawr.abund, mixture="NB")
det.notdate.cawr <-pcount(~ Wind + Sky + Noise ~1, cawr.abund, mixture="NB")
fms <- fitList(det.null.cawr, det.weather.cawr, det.global.cawr,
det.sound.cawr, det.date.cawr, det.detect.cawr, det.notdate.cawr)
ms1.cawr <- modSel(fms)
ms1.cawr
det.null.cawr <- pcount(~1 ~1, cawr.abund, mixture="P")
det.weather.cawr <- pcount(~ Wind + Sky ~1, cawr.abund, mixture="P")
det.global.cawr <- pcount(~ Jdate + Wind + Sky + Noise ~1, cawr.abund, mixture="P")
det.sound.cawr <- pcount(~ Noise + Wind ~1, cawr.abund, mixture="P")
det.date.cawr <- pcount(~ Jdate ~1, cawr.abund, mixture="P")
det.detect.cawr <- pcount(~ Jdate + Noise ~1, cawr.abund, mixture="P")
det.notdate.cawr <-pcount(~ Wind + Sky + Noise ~1, cawr.abund, mixture="P")
fms <- fitList(det.null.cawr, det.weather.cawr, det.global.cawr,
det.sound.cawr, det.date.cawr, det.detect.cawr, det.notdate.cawr)
ms1.cawr <- modSel(fms)
null.cawr <- pcount(~1 ~1, cawr.abund, mixture="P")
global.cawr <- pcount(~ 1 ~ Treatment + BA + Nsnags
+ Ccover + Ldepth + TreeHt + Age + TimeSinceB + Herbicide
, cawr.abund, mixture="P")
local.cawr <- pcount(~ 1 ~ BA + Ccover + TreeHt + Ldepth, cawr.abund, mixture="P")
lh.cawr <- pcount(~ 1 ~ Ccover + TreeHt + BA + Nsnags, cawr.abund, mixture="P")
##landscape.cawr <- pcount(~ 1 ~ cov 5 + 6, cawr.abund, mixture="P")
treatment.cawr <- pcount(~ 1 ~ Treatment + BA + TimeSinceB + Herbicide, cawr.abund, mixture="P")
fms2 <- fitList(null.cawr, global.cawr, local.cawr, lh.cawr, treatment.cawr)
ms2.cawr <- modSel(fms2)
null.cawr <- pcount(~1 ~1, cawr.abund, mixture="P")
global.cawr <- pcount(~ 1 ~ Treatment + BA + Nsnags
+ Ccover + Ldepth + TreeHt + Age + TimeSinceB + Herbicide
, cawr.abund, mixture="P")
local.cawr <- pcount(~ 1 ~ BA + Ccover + TreeHt + Ldepth, cawr.abund, mixture="P")
lh.cawr <- pcount(~ 1 ~ Ccover + TreeHt + BA + Nsnags, cawr.abund, mixture="P")
##landscape.cawr <- pcount(~ 1 ~ cov 5 + 6, cawr.abund, mixture="P")
treatment.cawr <- pcount(~ 1 ~ Treatment + BA + TimeSinceB + Herbicide, cawr.abund, mixture="P")
fms2 <- fitList(null.cawr, global.cawr, local.cawr, lh.cawr, treatment.cawr)
ms2.cawr <- modSel(fms2)
ms2.cawr
null2.cawr <- pcount(~ Jdate + Noise ~1, cawr.abund, mixture="P")
global2.cawr <- pcount(~ Jdate + Noise ~ Treatment + BA + Nsnags
+ Ccover + Ldepth + TreeHt + Age + TimeSinceB + Herbicide
, cawr.abund, mixture="P")
local2.cawr <- pcount(~ Jdate + Noise ~ BA + Ccover + TreeHt + Ldepth, cawr.abund, mixture="P")
lh2.cawr <- pcount(~ Jdate + Noise ~ Ccover + TreeHt + BA, cawr.abund, mixture="P")
#landscape.cawr <- pcount(~ Jdate + Noise ~ cov 5 + 6, cawr.abund, mixture="P")
treatment2.cawr <- pcount(~ Jdate + Noise ~ Treatment + BA + TimeSinceB + Herbicide, cawr.abund, mixture="P")
fms3 <- fitList(null2.cawr, global2.cawr, local2.cawr, lh2.cawr, treatment2.cawr)
ms3.cawr <- modSel(fms3)
ms3.cawr
ms3.cawr@Full
coef(ms3.cawr)
ms1.cawr
ms3.cawr
cawr.abund<- csvToUMF("cawr_abund.csv", long = FALSE, type = "unmarkedFramePCount")
sc <- siteCovs(cawr.abund)
sc[, 2:7] <- scale(sc[, 2:7])
siteCovs(cawr.abund) <- sc
null2.cawr <- pcount(~ Jdate + Noise ~1, cawr.abund, mixture="P")
global2.cawr <- pcount(~ Jdate + Noise ~ Treatment + BA + Nsnags
+ Ccover + Ldepth + TreeHt + Age + TimeSinceB + Herbicide
, cawr.abund, mixture="P")
local2.cawr <- pcount(~ Jdate + Noise ~ BA + Ccover + TreeHt + Ldepth, cawr.abund, mixture="P")
lh2.cawr <- pcount(~ Jdate + Noise ~ Ccover + TreeHt + BA, cawr.abund, mixture="P")
#landscape.cawr <- pcount(~ Jdate + Noise ~ cov 5 + 6, cawr.abund, mixture="P")
treatment2.cawr <- pcount(~ Jdate + Noise ~ Treatment + BA + TimeSinceB + Herbicide, cawr.abund, mixture="P")
fms3 <- fitList(null2.cawr, global2.cawr, local2.cawr, lh2.cawr, treatment2.cawr)
ms3.cawr <- modSel(fms3)
ms3.cawr
null2.cawr <- pcount(~ Jdate + Noise ~1, cawr.abund, mixture="P")
global2.cawr <- pcount(~ Jdate + Noise ~ Treatment + BA + Nsnags
+ Ccover + Ldepth + TreeHt + Age + TimeSinceB + Herbicide
, cawr.abund, mixture="P")
local2.cawr <- pcount(~ Jdate + Noise ~ BA + Ccover + TreeHt + Ldepth, cawr.abund, mixture="P")
lh2.cawr <- pcount(~ Jdate + Noise ~ Ccover + TreeHt + BA, cawr.abund, mixture="P")
treatment2.cawr <- pcount(~ Jdate + Noise ~ Treatment + BA + TimeSinceB + Herbicide, cawr.abund, mixture="P")
fms3 <- fitList(null2.cawr, local2.cawr, lh2.cawr)
ms3.cawr <- modSel(fms3)
ms3.cawr
